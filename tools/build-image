#!/bin/bash -efu

. "$HOMEDIR"/env
. "$TOOLSDIR"/sh-functions

IMAGE_PACKAGES="${IMAGE_PACKAGES:?IMAGE_PACKAGES variable required}"

! podman image exists "$IMAGE_SYSIMAGE:latest" ||
	exit 0

for n in $IMAGE_PACKAGES; do
	[ -f "$n" ] &&
		cat "$n" ||
		printf '%s\n' "$n"
done > "$HOSTDIR"/packages

{
	cat <<-'EOF'
	#!/bin/bash

	export LC_ALL=C
	export LANG=C
	export LANGUAGE=C
	PROG="${0##*/}"
	EOF

	for envname in ${CHROOTABLE_VARIABLES-}; do
		eval "envval=\"\${$envname-}\""
		quote_shell_variable envval "$envval"
		printf 'export %s="%s"\n' "$envname" "$envval"
	done

	cat "$VENDORDIR/$VENDOR/chrooted-build-image"
} | mkexec "$HOSTDIR/$PROG.chrooted"

podman container run \
	-v "$HOSTDIR":/.host:z \
	-v "$CACHEDIR":/.host/cache:z \
	"$IMAGE_BASEIMAGE" "/.host/$PROG.chrooted"

tag="$PROG"

podman image import "$HOSTDIR/image.tar" "$IMAGE_SYSIMAGE:$tag"
podman image tag "$IMAGE_SYSIMAGE:$tag" "$IMAGE_SYSIMAGE:latest"

find "$HOSTDIR" -mindepth 1 -maxdepth 1 -exec rm -rf -- '{}' '+'
