#!/bin/bash -efu
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2023  Alexey Gladkov <gladkov.alexey@gmail.com>

. "$HOMEDIR"/env
. "$TOOLSDIR"/sh-functions

IMAGE_PACKAGES="${IMAGE_PACKAGES:?IMAGE_PACKAGES variable required}"

! podman image exists "$IMAGE_SYSIMAGE:latest" ||
	exit 0

for n in $IMAGE_PACKAGES; do
	if [ -f "$n" ]; then
		grep -v -e '^#' "$n" ||:
	else
		printf '%s\n' "$n"
	fi
done > "$HOSTDIR"/packages

{
	cat <<-'EOF'
	#!/bin/bash

	export LC_ALL=C
	export LANG=C
	export LANGUAGE=C

	PROG="${0##*/}"
	verbose="$verbose"

	EOF

	print_environ_names | sort |
	while read -r envname; do
		case "$envname" in
			IMAGE_VAR_*) ;;
			*) continue ;;
		esac

		envval=
		eval "envval=\"\$$envname\""
		quote_shell_variable envval "$envval"

		printf 'export %s="%s"\n' "$envname" "$envval"
	done

	cat "$VENDORDIR/$VENDOR/chrooted-build-image"
} | mkexec "$HOSTDIR/$PROG.chrooted"

volumes=()
volumes+=( -v "$HOSTDIR":/.host:z )
volumes+=( -v "$CACHEDIR":/.host/cache:z )

if [ -n "${IMAGE_PREFILES-}" ]; then
	[ -d "${IMAGE_PREFILES-}" ] ||
		fatal "IMAGE_PREFILES must be a directory"
	volumes+=( -v "$IMAGE_PREFILES":/.host/prefiles:z )
fi

podman container run "${volumes[@]}" "$IMAGE_BASEIMAGE" "/.host/$PROG.chrooted"

tag="$PROG"

podman image import "$HOSTDIR/image.tar" "$IMAGE_SYSIMAGE:$tag"
podman image tag "$IMAGE_SYSIMAGE:$tag" "$IMAGE_SYSIMAGE:latest"

find "$HOSTDIR" -mindepth 1 -maxdepth 1 -exec rm -rf -- '{}' '+'
