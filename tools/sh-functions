#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2023  Alexey Gladkov <gladkov.alexey@gmail.com>

PROG="${0##*/}"

podman_common_volumes=(
	-v "$HOSTDIR":/.host:z
	-v "$CACHEDIR/$VENDOR":/.host/cache:z
)

message()
{
	printf >&2 '%s: %s\n' "$PROG" "$*"
}

fatal()
{
	message "$*"
	exit 1
}

verbose()
{
	[ -n "${verbose-}" ] || return 0
	message "$*"
}

quote_shell_variable()
{
	local __quote_shell_variable_var __quote_shell_variable_out
	__quote_shell_variable_var="$1"; shift
	__quote_shell_variable_out="$*"
	if [ -z "${__quote_shell_variable_out##*[\"\$\`\\\\]*}" ]; then
		__quote_shell_variable_out="$(printf %s "$__quote_shell_variable_out" |
				sed -e 's/[\"$\`\\]/\\&/g')" ||
			return 1
	fi
	eval "$__quote_shell_variable_var=\"\$__quote_shell_variable_out\""
}

print_environ_names()
{
	printenv -0 |
		tr '\n\0' '_\n' |
		sed -rn -e 's#^([^=]+)=.*#\1#p'
}

mkexec()
{
	cat >"$1"
	chmod 755 "$1"
}

create_helper()
{
	{
		cat <<-'EOF'
		#!/bin/bash
		export LC_ALL=C
		export LANG=C
		export LANGUAGE=C
		export PROG="${0##*/}"
		export verbose="$verbose"

		EOF
		cat <<-EOF
		export TAG_PREFIX="${SYSIMAGE_TAG_PREFIX-}"

		EOF
		cat <<-'EOF'
		message() {
		    printf >&2 '%s\n' "$PROG: $*"
		}

		fatal() {
		    message "$*"
		    exit 1
		}
		EOF

		[ ! -f "$VENDORDIR/$VENDOR/chrooted-sh-functions" ] ||
			cat "$VENDORDIR/$VENDOR/chrooted-sh-functions"

		print_environ_names | sort |
		while read -r envname; do
			case "$envname" in
				IMAGE_VAR_*) ;;
				*) continue ;;
			esac

			envval=
			eval "envval=\"\$$envname\""
			quote_shell_variable envval "$envval"

			printf 'export %s="%s"\n' "$envname" "$envval"
		done
		cat "$2"
	} |
		mkexec "$HOSTDIR/$1.chrooted"
}

create_vendor_helper()
{
	create_helper "$1" "$VENDORDIR/$VENDOR/chrooted-$1"
}
