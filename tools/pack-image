#!/bin/bash -efu
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2023  Alexey Gladkov <gladkov.alexey@gmail.com>

. "$HOMEDIR"/env
. "$TOOLSDIR"/sh-functions

podman image exists "$IMAGE_SYSIMAGE:latest" ||
	fatal "image \`$IMAGE_SYSIMAGE:latest' not found"

mkdir -p -- "$OUTDIR"

if [ -z "${PACK_IMAGE-}" ]; then
	verbose "exporting image \`$IMAGE_SYSIMAGE:latest' ..."

	podman container create --quiet --name image "$IMAGE_SYSIMAGE:latest" / >/dev/null

	podman export image |
		tar --preserve-permissions --xattrs --xattrs-include='*.*' -f- --delete .host |
		${COMPRESS:-cat} > "$OUTDIR/${IMAGENAME:-sysimage.tar}"

	podman container rm -f image >/dev/null

	files=( "${IMAGENAME:-sysimage.tar}" )
else
	verbose "running custom script to export image \`$IMAGE_SYSIMAGE:latest' ..."

	mkdir -p -- "$HOSTDIR/out"
	cp -af -- "$PACK_IMAGE" "$HOSTDIR/${PACK_IMAGE##*/}"

	podman container run --rm -t \
		-v "$HOSTDIR":/.host \
		--mount "type=image,source=$IMAGE_SYSIMAGE,destination=/.image,rw=false" \
		"$IMAGE_BASEIMAGE" "/.host/${PACK_IMAGE##*/}"

	files=( `cd "$HOSTDIR/out" && find . -mindepth 1 -maxdepth 1 -print` )

	for f in "${files[@]}"; do
		f="${f#.}"
		rm $verbose -rf -- "$OUTDIR/$f"
		mv $verbose -ft "$OUTDIR" -- "$HOSTDIR/out/$f"
	done
fi

echo ""
echo "Results are saved as:"
for f in "${files[@]}"; do
	echo "- $OUTDIR/${f#.}"
done
echo ""

find "$HOSTDIR" -mindepth 1 -maxdepth 1 -exec rm -rf -- '{}' '+'
