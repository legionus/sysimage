#!/bin/bash -eu

IMAGE_SCRIPTDIR="${IMAGE_SCRIPTDIR:?IMAGE_SCRIPTDIR required}"

. "$HOMEDIR"/env
. "$TOOLSDIR"/sh-functions

tag="$PROG"

! podman image exists "$IMAGE_SYSIMAGE:$tag" ||
	exit 0

podman image exists "$IMAGE_SYSIMAGE:latest" ||
	fatal "image \`$IMAGE_SYSIMAGE:latest' not found"

mkdir -p -- "$HOSTDIR"/scripts.d

for script in "$IMAGE_SCRIPTDIR"/*; do
	[ -x "$script" ] ||
		continue

	case "$script" in
		*~|*.bak|*.rpmnew|*.rpmsave) continue ;;
		*) ;;
	esac

	cp $verbose -af -- "$script" "$HOSTDIR"/scripts.d/
done

{
	printf '#!/bin/sh -eu\n'

	print_environ_names | sort |
	while read -r envname; do
		case "$envname" in
			GLOBAL_*|INFO_*)
				;;
			*)
				continue
				;;
		esac

		envval=
		eval "envval=\"\$$envname\""
		quote_shell_variable envval "$envval"

		verbose "export $envname=\"$envval\""
		printf 'export %s="%s"\n' "$envname" "$envval"
	done

	cat <<-EOF
	for script in /.host/scripts.d/*; do
		[ -x "\$script" ] || continue
		[ -z "$verbose" ] || echo "$PROG: executing \$script ..."
		"\$script"
	done
	EOF
} > "$HOSTDIR/run.sh"
chmod 755 "$HOSTDIR/run.sh"

podman image build --squash --force-rm=true \
        -v "$HOSTDIR":/.host:z \
        -t "$IMAGE_SYSIMAGE:$tag" \
        -f - <<-EOF
FROM $IMAGE_SYSIMAGE:latest
RUN /.host/run.sh
EOF

podman image tag "$IMAGE_SYSIMAGE:$tag" "$IMAGE_SYSIMAGE:latest"

exit
