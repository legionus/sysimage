#!/bin/bash -eu
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2023  Alexey Gladkov <gladkov.alexey@gmail.com>

IMAGE_SCRIPTDIR="${IMAGE_SCRIPTDIR:?IMAGE_SCRIPTDIR required}"

. "$HOMEDIR"/env
. "$TOOLSDIR"/sh-functions

tag="${SYSIMAGE_TAG_PREFIX:+$SYSIMAGE_TAG_PREFIX-}$PROG"
latest="${SYSIMAGE_TAG_PREFIX:+$SYSIMAGE_TAG_PREFIX-}latest"

if podman image exists "$IMAGE_SYSIMAGE:$tag"; then
	podman image tag "$IMAGE_SYSIMAGE:$tag" "$IMAGE_SYSIMAGE:$latest"
	exit 0
fi

podman image exists "$IMAGE_SYSIMAGE:$latest" ||
	fatal "image \`$IMAGE_SYSIMAGE:$latest' not found"

copy_verndor_tools

mkdir -p -- "$HOSTDIR"/scripts.d
{
	printf 'FROM %s\n' "$IMAGE_SYSIMAGE:$latest"
	printf 'ENV verbose="%s"\n' "$verbose"

	print_environ_names | sort |
	while read -r envname; do
		case "$envname" in
			INFO_*) ;;
			*) continue ;;
		esac

		envval=
		eval "envval=\"\$$envname\""
		quote_shell_variable envval "$envval"

		printf 'ENV %s="%s"\n' "$envname" "$envval"
	done

	for f in "$IMAGE_SCRIPTDIR"/*; do
		[ -x "$f" ] ||
			continue
		case "$f" in
			*~|*.bak|*.rpmnew|*.rpmsave) continue ;;
			*) ;;
		esac
		cp -af -- "$f" "$HOSTDIR"/scripts.d/

		printf 'RUN "/.host/scripts.d/%s"\n' "${f##*/}"
	done
} |
	podman image build --squash --force-rm --dns=none $VOLUMES \
		-t "$IMAGE_SYSIMAGE:$tag" -f-

podman image tag "$IMAGE_SYSIMAGE:$tag" "$IMAGE_SYSIMAGE:$latest"

find "$HOSTDIR" -mindepth 1 -maxdepth 1 -exec rm -rf -- '{}' '+'
