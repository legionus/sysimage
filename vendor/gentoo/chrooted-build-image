#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2023  Alexey Gladkov <gladkov.alexey@gmail.com>

set -eu

export FEATURES="-ipc-sandbox -network-sandbox -pid-sandbox ${IMAGE_VAR_EMERGE_IGNORE_COLLISIONS:+-collision-detect -protect-owned}"

automask=( --autounmask=y --autounmask-write=y --autounmask-use=y --autounmask-continue=y )

set -- ${IMAGE_VAR_EMERGE_QUIET:+-q} --ask=n --read-news=n --newuse --verbose-conflicts "${automask[@]}"

[ -z "${IMAGE_VAR_EMERGE_JOBS-}"         ] || set -- "$@" --jobs "$IMAGE_VAR_EMERGE_JOBS"
[ -z "${IMAGE_VAR_EMERGE_LOAD_AVERAGE-}" ] || set -- "$@" --load-average "$IMAGE_VAR_EMERGE_LOAD_AVERAGE"

if [ -n "${IMAGE_VAR_CACHE_BINPKGS:-}" ]; then
	message "using binpkg cache ..."

	if [ -d /etc/portage/binrepos.conf ]; then
		rm -rf -- /.host/binrepos.conf
		mv -f -- /etc/portage/binrepos.conf /.host/binrepos.conf
	fi

	export PKGDIR=/.host/cache/binpkgs

	mkdir -p -- "$PKGDIR"
	:>> "$PKGDIR"/Packages

	mkdir -p -- /etc/portage/binrepos.conf
	cat > /etc/portage/binrepos.conf/gentoobinhost.conf <<-EOF
	[sysimage]
	sync-uri=file://$PKGDIR
	fetchcommand=/usr/bin/curl --fail --output \${DISTDIR}/\${FILE} \${URI}
	resumecommand=/usr/bin/curl -fail --continue-at - --output \${DISTDIR}/\${FILE} \${URI}
	EOF

	# https://wiki.gentoo.org/wiki/Binary_package_guide#Maintaining_the_Packages_file
	#
	# If for some reason binary packages are simply deleted or copied into
	# the packages directory, or the Packages file gets corrupted or
	# deleted, then it must be recreated.
	emaint binhost --fix

	set -- "$@" --usepkg=y --buildpkg=y
fi

export DISTDIR=/.host/cache/distfiles
mkdir -p -- "$DISTDIR"

message "running emerge --sync ..."
emerge --sync ${IMAGE_VAR_EMERGE_QUIET:+--quiet}

mkdir -p /etc/portage/sets
cp -v /.host/packages /etc/portage/sets/sysimage

if grep -E -qs \
	-e '^(\s*)sys-apps/gentoo-systemd-integration(\s*)$' \
	-e '^(\s*)sys-apps/systemd(\s*)$' \
	/etc/portage/sets/sysimage;
then
	emerge --deselect sys-apps/openrc sys-apps/sysvinit sys-fs/udev ||:
	emerge --oneshot virtual/udev virtual/libudev
fi

message "installation extra packages ..."
emerge "$@" @sysimage

message "update the @world ..."
emerge "$@" ${IMAGE_VAR_EMERGE_QUIET:+-q} --update --newuse --deep @world

kernels=(`find /usr/src -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | sort -V`)
if [ "${#kernels[*]}" -gt 0 ]; then
	current=
	[ ! -L /usr/src/linux ] ||
		current="$(readlink /usr/src/linux)" ||:

	for value in "${kernels[@]}"; do
		message "need to rebuild kernel modules for $value ..."

		ln -vnsf -- "$value" /usr/src/linux
		emerge ${IMAGE_VAR_EMERGE_QUIET:+-q} --ask=n "${automask[@]}" @module-rebuild
	done

	[ -z "$current" ] ||
		ln -vnsf -- "$current" /usr/src/linux
fi

[ -z "${IMAGE_VAR_REMOVE_BDEPS:-}" ] ||
	emerge --depclean --with-bdeps=n

if [ -n "${IMAGE_VAR_CACHE_BINPKGS:-}" ]; then
	rm -rf -- /etc/portage/binrepos.conf

	[ ! -d /.host/binrepos.conf ] ||
		mv -f /.host/binrepos.conf /etc/portage/binrepos.conf
fi
